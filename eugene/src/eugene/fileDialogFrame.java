/*
 Copyright (c) 2009 The Regents of the University of California.
 All rights reserved.
 Permission is hereby granted, without written agreement and without
 license or royalty fees, to use, copy, modify, and distribute this
 software and its documentation for any purpose, provided that the above
 copyright notice and the following two paragraphs appear in all copies
 of this software.

 IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
 THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.

 THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
 PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
 CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
 ENHANCEMENTS, OR MODIFICATIONS..
 */

/**
  *@author Lesia Bilitchenko, Adam Liu
  *@see <a href="http://www.clothocad.org">http://www.clothocad.org</a>
  */

package eugene;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Adam Liu
 */
public class fileDialogFrame extends javax.swing.JFrame {

    /** Creates new form pictopartsFrame */
    public fileDialogFrame() {
        initComponents();
        
        jFileChooser1.addChoosableFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) { // Handles which files are allowed by filter.
                // Since this is used during enumeration of existing file system,
                // this should not be necessary, but good practice to test for null.
                if (f != null) {
                    if (f.isDirectory()) { // Allow directories to be seen.
                        return true;
                    }
                    // Get file extension and test if should be allowed.
                    String extension = getExtension(f);
                    if (extension != null) {
                        return ((extension.equalsIgnoreCase("eug")) ? true : false);
                    }
                }
                return false;
            }

            @Override
            public String getDescription() { // 'Files of Type' description
                return "*.eug";
            }

            // Takes a java.io.File object, parses file extension, and returns as java.lang.String.
            String getExtension(File f) {
                String ext = null;
                String s = f.getName();
                int i = s.lastIndexOf('.');
                if (i > 0 && i < s.length() - 1) {
                    ext = s.substring(i + 1).toLowerCase();
                }
                return ext;
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.setCurrentDirectory(null);
        jFileChooser1.setDialogTitle("Eugene");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** This method displays a file chooser to choose a *.p file to create
     * a parts image.
     */
    public void display() {
        jFileChooser1.setDialogTitle("Eugene");
        int retVal = jFileChooser1.showDialog(this, "Compile");
        if (retVal == JFileChooser.APPROVE_OPTION) {
            _file = jFileChooser1.getSelectedFile();
        }
    }

    /** This method displays a folder chooser to choose an "include" folder to
     * contain the specific header files
     */
    public void displayInclude(){
        jFileChooser1.setDialogTitle("Eugene - Include Folder Chooser");
        jFileChooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        int retVal = jFileChooser1.showDialog(this, "Select");
        if (retVal == JFileChooser.APPROVE_OPTION){
            _folder = jFileChooser1.getSelectedFile();
        }
    }

    /** This method is used by pictopartsPlugin to get the file that was
     * selected.
     *
     * @return file that was selected in the file chooser
     */
    public File getFile() {
        return _file;
    }

    public File getFolder() {
        return _folder;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fileDialogFrame().setVisible(true);
            }
        });
    }

    private File _file;
    private File _folder;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables

}
